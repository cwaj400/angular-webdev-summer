{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/enrollment/enrollment.component.css","webpack:///./src/app/enrollment/enrollment.component.html","webpack:///./src/app/enrollment/enrollment.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/sections/sections.component.css","webpack:///./src/app/sections/sections.component.html","webpack:///./src/app/sections/sections.component.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-white-board></app-white-board>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ang-webdev-angelljames';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport {CourseServiceClient} from './services/course.service.client';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { EnrollmentComponent } from './enrollment/enrollment.component';\nimport { SectionsComponent } from './sections/sections.component';\nimport {UserServiceClient} from './services/user.service.client';\nimport {SectionServiceClient} from './services/section.service.client';\nimport {RouterModule} from '@angular/router';\nimport {routing} from './app.routing';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WhiteBoardComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    CourseNavigatorComponent,\n    EnrollmentComponent,\n    SectionsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [CourseServiceClient, UserServiceClient, SectionServiceClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport {CourseNavigatorComponent} from './course-navigator/course-navigator.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {SectionsComponent} from './sections/sections.component';\nimport {EnrollmentComponent} from './enrollment/enrollment.component';\n\nconst appRoutes: Routes = [\n  { path: 'enrollments', component: EnrollmentComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'courses', component: CourseNavigatorComponent },\n  { path: 'sections', component: SectionsComponent }\n];\n\nexport const routing = RouterModule.forRoot(appRoutes);\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <h2>Courses</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li (click)=\\\"selectCourse(course)\\\"\\n          [ngClass]=\\\"{'active': course.id == selectedCourse.id}\\\"\\n          *ngFor=\\\"let course of courses\\\"\\n          class=\\\"list-group-item\\\">\\n        {{course.title}}\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <h2>Modules</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li (click)=\\\"selectModule(module)\\\"\\n          *ngFor=\\\"let module of selectedCourse.modules\\\"\\n          class=\\\"list-group-item\\\">\\n        {{module.title}}\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-4\\\">\\n    <h2>Lessons</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li *ngFor=\\\"let lesson of selectedModule.lessons\\\"\\n          class=\\\"list-group-item\\\">\\n        {{lesson.title}}\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  courses = [];\n  selectedCourse = {};\n  selectedModule = {};\n\n  constructor(private courseService: CourseServiceClient) { }\n\n  selectCourse(course) {\n    this.selectedCourse = course;\n    this.selectedModule = {};\n  }\n  selectModule(module) {\n    this.selectedModule = module;\n  }\n\n  ngOnInit() {\n    this.courseService\n      .findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>Enrollments</h2>\\n<ul class=\\\"list-group\\\">\\n  <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n    {{section.title}} (seats: 24)\\n    <button class=\\\"float-right\\\" (click)=\\\"enroll(section._id)\\\">Enroll</button>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SectionServiceClient} from '../services/section.service.client';\n\n@Component({\n  selector: 'app-enrollment',\n  templateUrl: './enrollment.component.html',\n  styleUrls: ['./enrollment.component.css']\n})\nexport class EnrollmentComponent implements OnInit {\n\n  sections = [];\n\n  constructor(private sectionService: SectionServiceClient) { }\n\n  enroll = sectionId =>\n    this.sectionService\n      .enroll(sectionId);\n\n  ngOnInit() {\n    this.sectionService\n      .findAllSections()\n      .then(sections => this.sections = sections);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h2>Login</h2>\\n<input [(ngModel)]=\\\"username\\\"\\n       class=\\\"form-control\\\"/>\\n<input [(ngModel)]=\\\"password\\\"\\n       class=\\\"form-control\\\"/>\\n<button (click)=\\\"login(username, password)\\\"\\n        class=\\\"btn btn-primary btn-block\\\">\\n  Login\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from '../services/user.service.client';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username: String;\n  password: String;\n\n  constructor(private router: Router,\n              private userService: UserServiceClient) { }\n\n  login = (username, password) => {\n    const user = {\n      username: username,\n      password: password\n    };\n    this.userService.login(user)\n      .then(u => this.router.navigate(['profile']));\n  }\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  profile works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  register works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  sections works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sections',\n  templateUrl: './sections.component.html',\n  styleUrls: ['./sections.component.css']\n})\nexport class SectionsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class CourseServiceClient {\n  findAllCourses() {\n    return fetch('http://localhost:8080/api/course')\n      .then(response => response.json());\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SectionServiceClient {\n\n  enroll = sectionId =>\n    fetch('http://localhost:3000/api/section/' + sectionId + '/enroll', {\n      method: 'put',\n      credentials: 'include'\n    });\n\n  findAllSections = () =>\n    fetch('http://localhost:3000/api/section')\n      .then(response => response.json());\n\n  findSectionsForCourse = courseId =>\n    fetch('http://localhost:3000/api/course/' + courseId + '/section')\n      .then(response => response.json());\n\n  createSection = section =>\n    fetch('http://localhost:3000/api/section', {\n      method: 'post',\n      headers: {\n        'content-type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify(section)\n    })\n      .then(response => response.json())\n}\n","\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class UserServiceClient {\n  login = (user) =>\n    fetch('http://localhost:3000/login', {\n      method: 'post',\n      credentials: 'include',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    })\n\n  currentUser = () =>\n    fetch('http://localhost:3000/currentUser', {\n      credentials: 'include'\n    }).then(response => response.json())\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Welcome to WhiteBoard</h1>\\n\\n  <a routerLink=\\\"enrollments\\\">Enrollments</a> |\\n  <a routerLink=\\\"sections\\\">Sections</a> |\\n  <a routerLink=\\\"courses\\\">Course Navigator</a> |\\n  <a routerLink=\\\"login\\\">Login</a> |\\n  <a routerLink=\\\"register\\\">Register</a> |\\n  <a routerLink=\\\"profile\\\">Profile</a>\\n\\n  <router-outlet></router-outlet>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {CourseServiceClient} from '../services/course.service.client';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n// TODO:different areas of main page.\n// TODO: grid area?\n// TODO: node js, can it be in same folder?\n// TODO: selection fix.\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}